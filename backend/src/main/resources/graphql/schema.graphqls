type Query {
    projectBySlug(slug: String!): Project
    projects: [Project]
    users: [User]
}

type Project {
    createdAt: String
    id: Int
    name: String
    namespace: ProjectNamespace
    stats: ProjectStats
    category: String
    lastUpdated: String
    visibility: String
    avatarUrl: String
    owner: User
    homepage: ProjectPage
    pages: [ProjectPage]
}

type User {
    id: Int
    uuid: String
    createdAt: String
    name: String
    email: String
    tagline: String
    read_prompts: [Int]
    locked: Boolean
    language: String
    theme: String
    email_verified: Boolean
    social: String
    avatarUrl: String
    projects: [Project]
}

type ProjectPage {
    id: Int
    createdAt: String
    project: Project
    name: String
    slug: String
    contents: String
    deletable: Boolean
    parent: ProjectPage
}

type ProjectStats implements Virtual {
    _virtual: Boolean
    views: Int
    downloads: Int
    recentViews: Int
    recentDownloads: Int
    stars: Int
    watchers: Int
}

type ProjectNamespace implements Virtual {
    _virtual: Boolean
    owner: String
    slug: String
}

interface Virtual {
    _virtual: Boolean
}
