apiVersion: v1
kind: Secret
metadata:
  name: hangar-backend
  labels:
    {{- include "hangar.labels" . | nindent 4 }}
type: Opaque
stringData:
  application.yaml: |
    spring:
      application:
        name: hangar-backend
      datasource:
        url: "jdbc:postgresql://{{ .Values.backend.config.postgresql.hostname }}:{{ .Values.backend.config.postgresql.port }}/{{ .Values.backend.config.postgresql.database }}{{ .Values.backend.config.postgresql.options }}"
        username: "{{ .Values.backend.config.postgresql.username }}"
        password: "{{ .Values.backend.config.postgresql.password }}"
    server:
      port: 8080
    management:
      server:
        port: 8081
      security:
        enabled: false
      endpoints:
        enabled-by-default: true
      endpoint:
        health:
          enabled: true
          probes:
            enabled: true
      health:
        livenessState:
          enabled: true
        readinessState:
          enabled: true
      tracing:
        enabled: {{ .Values.backend.config.tracing }}

    hangar:
      dev: false
      base-url: "{{ .Values.base.host }}"
      allow-indexing: "{{ .Values.base.allowIndexing }}"
      disable-jgroups: "false"

      announcements:
        -
          text: "{{ .Values.backend.config.announcement }}"
          color: "{{ .Values.backend.config.color }}"

      security:
        token-secret: "{{ .Values.backend.config.tokenSecret }}"
        rp-id: "{{ .Values.backend.config.rpId }}"
        o-auth-providers:
        - name: "github"
          mode: "github"
          client-id: "{{ .Values.backend.config.githubClientId }}"
          client-secret: "{{ .Values.backend.config.githubClientSecret }}"
          scopes:
          - "user:email"
          unlink-link: "https://github.com/settings/connections/applications/:id"
        - name: "microsoft"
          mode: "oidc"
          client-id: "{{ .Values.backend.config.microsoftClientId }}"
          client-secret: "{{ .Values.backend.config.microsoftClientSecret }}"
          scopes:
          - "openid"
          - "email"
          - "profile"
          well-known: "https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration"
          unlink-link: "https://account.live.com/consent/Manage"
        - name: "google"
          mode: "oidc"
          client-id: "{{ .Values.backend.config.googleClientId }}"
          client-secret: "{{ .Values.backend.config.googleClientSecret }}"
          scopes:
            - "openid"
            - "email"
            - "profile"
          well-known: "https://accounts.google.com/.well-known/openid-configuration"
          unlink-link: "https://myaccount.google.com/connections"

      storage:
        plugin-upload-dir: "/hangar/uploads"
        type: "{{ .Values.backend.config.storage.type }}"
        access-key: "{{ .Values.backend.config.storage.accessKey }}"
        secret-key: "{{ .Values.backend.config.storage.secretKey }}"
        bucket: "{{ .Values.backend.config.storage.bucket }}"
        object-storage-endpoint: "{{ .Values.backend.config.storage.objectStorageEndpoint }}"
        cdnEndpoint: "{{ .Values.backend.config.storage.cdnEndpoint }}"
        cdnIncludeBucket: "{{ .Values.backend.config.storage.cdnIncludeBucket }}"

      mail:
        from: "{{ .Values.backend.config.mail.from }}"
        user: "{{ .Values.backend.config.mail.user }}"
        pass: "{{ .Values.backend.config.mail.pass }}"
        host: "{{ .Values.backend.config.mail.host }}"
        port: "{{ .Values.backend.config.mail.port }}"
        dev: false

    sentry:
      dsn: "{{ .Values.backend.config.sentry.dsn }}"
      environment: "{{ .Values.backend.config.sentry.environment }}"
      traces-sample-rate: "{{ .Values.backend.config.sentry.tracesSampleRate }}"
      instrumenter: "otel"

    logging:
      level:
        root: INFO
        org.springframework: INFO
