{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/internal/users/{userName}/settings/tagline": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveTagline",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveTagline_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/users/{userName}/settings/resetTagline": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "resetTagline",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "resetTagline_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/users/{userName}/settings/profile": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveProfileSettings",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settings",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.UserProfileSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveProfileSettings_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.UserProfileSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/users/{userName}/settings/avatar": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "changeAvatar",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avatar",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "changeAvatar_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "avatar"
                ],
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/users/{userName}/settings/": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveSettings",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settings",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.UserSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveSettings_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.UserSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/users/{userName}/alts": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "possibleAltAccounts",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "possibleAltAccounts_1",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/users/anon/settings/": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveSettings_2",
        "parameters": [
          {
            "name": "settings",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.UserSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "saveSettings_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.UserSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/users/@me": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getCurrentUser",
        "parameters": [
          {
            "name": "HangarAuth_REFRESH",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getCurrentUser_1",
        "parameters": [
          {
            "name": "HangarAuth_REFRESH",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/unreadnotifications": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getUnreadNotifications",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getUnreadNotifications_1",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/unreadcount": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getUnreadNotifications_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getUnreadNotifications_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/recentnotifications": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getRecentNotifications",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarNotification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getRecentNotifications_1",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarNotification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/readnotifications": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getReadNotifications",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getReadNotifications_1",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/read-prompt/{prompt}": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "readPrompt",
        "parameters": [
          {
            "name": "prompt",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Prompt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "readPrompt_1",
        "parameters": [
          {
            "name": "prompt",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Prompt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/notifications": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getNotifications_1",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/notifications/{id}": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "markNotificationAsRead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "markNotificationAsRead_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/markallread": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "markNotificationAsRead_2",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "markNotificationAsRead_3",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/invites": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getUserInvites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.HangarUserController$Invites"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "getUserInvites_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.HangarUserController$Invites"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/invites/project/{id}/{status}": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "updateProjectInviteStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.HangarUserController$InviteStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "updateProjectInviteStatus_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.HangarUserController$InviteStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/invites/organization/{id}/{status}": {
      "get": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "updateOrganizationInviteStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.HangarUserController$InviteStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "post": {
        "tags": [
          "hangar-user-controller"
        ],
        "operationId": "updateOrganizationInviteStatus_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.HangarUserController$InviteStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/projects/{slug}/upload": {
      "post": {
        "tags": [
          "Versions"
        ],
        "summary": "Creates a new version and returns parts of its metadata",
        "description": "Creates a new version for a project. Requires the `create_version` permission in the project or owning organization.\nMake sure you provide the contents of this request as multipart/form-data.\nYou can find a simple example implementation written in Java here: https://gist.github.com/kennytv/a227d82249f54e0ad35005330256fee2",
        "operationId": "uploadVersion",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return versions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "versionUpload"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "The version files in order of selected platforms, if any",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "versionUpload": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.VersionUpload"
                  }
                }
              },
              "encoding": {
                "versionUpload": {
                  "contentType": "application/json"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.UploadedVersion"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.UploadedVersion"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.UploadedVersion"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "create_version"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{author}/{slug}/upload": {
      "post": {
        "tags": [
          "Versions"
        ],
        "operationId": "uploadVersion_1",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the project to return versions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return versions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "versionUpload"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "The version files in order of selected platforms, if any",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "versionUpload": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.VersionUpload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.UploadedVersion"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/keys": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "Fetches a list of API Keys",
        "description": "Fetches a list of API Keys. Requires the `edit_api_keys` permission.",
        "operationId": "getKeys",
        "responses": {
          "200": {
            "description": "Key created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.ApiKey"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.ApiKey"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.ApiKey"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "edit_api_keys"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Creates an API key",
        "description": "Creates an API key. Requires the `edit_api_keys` permission.",
        "operationId": "createKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.CreateAPIKeyForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Key created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "edit_api_keys"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "API Keys"
        ],
        "summary": "Deletes an API key",
        "description": "Deletes an API key. Requires the `edit_api_keys` permission.",
        "operationId": "deleteKey",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the key to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Key deleted"
          },
          "401": {
            "description": "Api session missing, invalid or expired"
          },
          "403": {
            "description": "Not enough permissions to use this endpoint"
          }
        },
        "security": [
          {
            "HangarAuth": [
              "edit_api_keys"
            ]
          }
        ]
      }
    },
    "/api/v1/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Creates an API JWT",
        "description": "`Log-in` with your API key in order to be able to call other endpoints authenticated. The returned JWT should be specified as a header in all following requests: `Authorization: HangarAuth your.jwt`",
        "operationId": "authenticate",
        "parameters": [
          {
            "name": "apiKey",
            "in": "query",
            "description": "JWT",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.auth.ApiSession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.auth.ApiSession"
                }
              }
            }
          },
          "401": {
            "description": "Api key missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.auth.ApiSession"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/savePluginDependencies": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "savePluginDependencies",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.UpdatePluginDependencies"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/savePlatformVersions": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "savePlatformVersions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.UpdatePlatformVersions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/saveDescription": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "saveDescription",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/restore": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "restoreVersion",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.versions.ProjectVersionTable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/pinned": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "setPinnedStatus",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/hardDelete": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "hardDeleteVersion",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.projects.ProjectTable"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.versions.ProjectVersionTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/versions/version/{projectId}/{versionId}/delete": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "softDeleteVersion",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.versions.ProjectVersionTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/versions/version/{id}/upload": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "channel",
                  "data"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.MultipartFileOrUrl"
                    }
                  },
                  "channel": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.PendingVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/versions/version/{id}/create": {
      "post": {
        "tags": [
          "version-controller"
        ],
        "operationId": "createVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.PendingVersion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/undoApproval": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "undoApproval",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/stop": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "stopVersionReview",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/start": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "startVersionReview",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/reopen": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "reopenVersionReview",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/message": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "addVersionReviewMessage",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/approve": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "approveVersionReview",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews/approvePartial": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "approvePartialVersionReview",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/visibility/{projectId}": {
      "post": {
        "tags": [
          "project-admin-controller"
        ],
        "operationId": "changeProjectVisibility",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.projects.VisibilityChangeForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/visibility/{projectId}/sendforapproval": {
      "post": {
        "tags": [
          "project-admin-controller"
        ],
        "operationId": "sendProjectForApproval",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/transfer": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "transferProject",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/sponsors": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "saveProjectSettings",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/settings": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "saveProjectSettings_1",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.projects.ProjectSettingsForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/saveIcon": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "saveProjectIcon",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "projectIcon"
                ],
                "type": "object",
                "properties": {
                  "projectIcon": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/resetIcon": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "resetProjectIcon",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/rename": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "renameProject",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/members/remove": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "removeProjectMember",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$ProjectMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/members/leave": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "leaveProject",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/members/edit": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "editProjectMember",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$ProjectMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/members/add": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "addProjectMember",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$ProjectMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}/canceltransfer": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "cancelProjectTransfer",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{projectId}/manage/hardDelete": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "hardDeleteProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.projects.ProjectTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/projects/project/{projectId}/manage/delete": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "softDeleteProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.projects.ProjectTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/projects/project/{id}/watch/{state}": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "setProjectWatching",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{id}/star/{state}": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "setProjectStarred",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{id}/pin/{state}": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "setPinnedStatus_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/notes/{projectId}": {
      "get": {
        "tags": [
          "project-admin-controller"
        ],
        "operationId": "getProjectNotes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectNote"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "project-admin-controller"
        ],
        "operationId": "addProjectNote",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/internal/projects/create": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "operationId": "createProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.projects.NewProjectForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/pages/save/{projectId}/{pageId}": {
      "post": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "saveProjectPage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/pages/delete/{projectId}/{pageId}": {
      "post": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "deleteProjectPage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/pages/create/{projectId}": {
      "post": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "createProjectPage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.projects.NewProjectPage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/pages/convert-bbcode": {
      "post": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "convertBBCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/organizations/{org}/userOrganizationsVisibility": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "changeUserOrganizationMembershipVisibility",
        "parameters": [
          {
            "name": "hidden",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/transfer": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "transferOrganization",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/settings/tagline": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "saveTagline_2",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/settings/avatar": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "changeAvatar_2",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "avatar"
                ],
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/members/remove": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "removeOrganizationMember",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$OrgMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/members/leave": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "leaveOrganization",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/members/edit": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "editOrganizationMember",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$OrgMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/members/add": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "addOrganizationMember",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$OrgMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/delete": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}/canceltransfer": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "cancelOrganizationTransfer",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/create": {
      "post": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.CreateOrganizationForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/oauth/{provider}/unlink/{id}": {
      "post": {
        "tags": [
          "o-auth-controller"
        ],
        "operationId": "unlink",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/oauth/register": {
      "post": {
        "tags": [
          "o-auth-controller"
        ],
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.OAuthSignupForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.OAuthSignupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/jarscanning/scan/{platform}/{versionId}": {
      "post": {
        "tags": [
          "jar-scanning-controller"
        ],
        "operationId": "scan",
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/flags/{id}/resolve/{resolve}": {
      "post": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "resolve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "resolve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/flags/{id}/notify": {
      "post": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "notifyReportParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.admin.ReportNotificationForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/flags/": {
      "post": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "flag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.FlagForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/internal/channels/{projectId}/edit": {
      "post": {
        "tags": [
          "channel-controller"
        ],
        "operationId": "editChannel",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.projects.EditChannelForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/channels/{projectId}/delete/{channelId}": {
      "post": {
        "tags": [
          "channel-controller"
        ],
        "operationId": "deleteChannel",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/channels/{projectId}/create": {
      "post": {
        "tags": [
          "channel-controller"
        ],
        "operationId": "createChannel",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.projects.ChannelForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/internal/auth/webauthn/unregister": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "unregisterWebauthnDevice",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/webauthn/setup": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "setupWebauthn",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/webauthn/rename": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "renameWebauthn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.controller.CredentialController$RenameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/webauthn/register": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "registerWebauthn",
        "parameters": [
          {
            "name": "X-Hangar-Verify",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/webauthn/assert": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "prepareWebauthnLogin",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/totp/verify": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "verifyTotp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/totp/setup": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "setupTotp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.TotpSetupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/totp/remove": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "removeTotp",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/totp/register": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "registerTotp",
        "parameters": [
          {
            "name": "X-Hangar-Verify",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.TotpForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/signup": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.SignupForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/settings": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.SettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/reset/verify": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "verifyResetCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.ResetForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/reset/set": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "setNewPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.ResetForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/reset/send": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "sendResetMail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.ResetForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/login/webauthn": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "operationId": "loginWebAuthN",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginWebAuthNForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/login/totp": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "operationId": "loginTotp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginTotpForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/login/sudo": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "operationId": "loginSudo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/login/password": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "operationId": "loginPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginPasswordForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/login/backup": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "operationId": "loginBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginBackupForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.login.LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/email/verify": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "verifyEmail",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/email/send": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "sendEmailCode",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/codes/show": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "showBackupCodes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.credential.BackupCodeCredential$BackupCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/codes/regenerate": {
      "post": {
        "tags": [
          "credential-controller"
        ],
        "operationId": "regenerateBackupCodes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.credential.BackupCodeCredential$BackupCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/account": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "saveAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.AccountForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/api-keys/delete-key/{user}": {
      "post": {
        "tags": [
          "api-key-controller"
        ],
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/api-keys/create-key/{user}": {
      "post": {
        "tags": [
          "api-key-controller"
        ],
        "operationId": "createApiKey",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.CreateAPIKeyForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/yeet/{user}": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "yeetusDeletus",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/admin/user/{user}/{role}": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "addRole",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "removeRole",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/admin/updateHashes": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "updateHashes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/scanSafeLinks": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "approveVersionsWithSafeLinks",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/admin/roles": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "changeRoles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.admin.ChangeRoleForm"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/admin/platformVersions": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "changePlatformVersions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.admin.ChangePlatformVersionsForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/admin/lock-user/{user}": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "setUserLock",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          },
          {
            "name": "locked",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "toggleProjectDeletion",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pages/editmain/{slug}": {
      "patch": {
        "tags": [
          "Pages"
        ],
        "summary": "Edits the main page of a project",
        "description": "Edits the main page of a project. Requires the `edit_page` permission in the project or owning organization.",
        "operationId": "editMainPage",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to change the page for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.StringContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Api session missing, invalid or expired"
          },
          "403": {
            "description": "Not enough permissions to use this endpoint"
          }
        },
        "security": [
          {
            "HangarAuth": [
              "edit_page"
            ]
          }
        ]
      }
    },
    "/api/v1/pages/edit/{slug}": {
      "patch": {
        "tags": [
          "Pages"
        ],
        "summary": "Edits a page of a project",
        "description": "Edits a page of a project. Requires the `edit_page` permission in the project or owning organization.",
        "operationId": "editPage",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to change the page for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.PageEditForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Api session missing, invalid or expired"
          },
          "403": {
            "description": "Not enough permissions to use this endpoint"
          }
        },
        "security": [
          {
            "HangarAuth": [
              "edit_page"
            ]
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Searches for users",
        "description": "Returns a list of users based on a search query. Requires the `view_public_info` permission.",
        "operationId": "showUsers",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/users/{user}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a specific user",
        "description": "Returns a specific user. Requires the `view_public_info` permission.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "The name of the user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/users/{user}/watching": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the watched projects for a specific user",
        "description": "Returns the watched projects for a specific user. Requires the `view_public_info` permission.",
        "operationId": "getUserWatching",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "The user to return watched projects for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "How to sort the projects",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectSortingStrategy"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/users/{user}/starred": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the starred projects for a specific user",
        "description": "Returns the starred projects for a specific user. Requires the `view_public_info` permission.",
        "operationId": "showStarred",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "The user to return starred projects for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "How to sort the projects",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectSortingStrategy"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/users/{user}/pinned": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the pinned projects for a specific user",
        "description": "Returns the pinned projects for a specific user. Requires the `view_public_info` permission.",
        "operationId": "getUserPinnedProjects",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "The user to return pinned projects for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectCompact"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectCompact"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectCompact"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/staff": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns Hangar staff",
        "description": "Returns Hanagr staff. Requires the `view_public_info` permission.",
        "operationId": "getStaff",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Searches the projects on Hangar",
        "description": "Searches all the projects on Hangar, or for a single user. Requires the `view_public_info` permission.",
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "prioritizeExactMatch",
            "in": "query",
            "description": "Whether to prioritize the project with an exact name match if present",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.Project"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.Project"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.Project"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns info on a specific project",
        "description": "Returns info on a specific project. Requires the `view_public_info` permission.",
        "operationId": "getProject",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.Project"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.Project"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.Project"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/watchers": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the watchers of a project",
        "description": "Returns the watchers of a project. Requires the `view_public_info` permission.",
        "operationId": "getProjectWatchers",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return watchers for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/versions": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Returns all versions of a project",
        "description": "Returns all versions of a project. Requires the `view_public_info` permission in the project or owning organization.",
        "operationId": "listVersions",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return versions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/versions/{name}": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Returns a specific version of a project",
        "description": "Returns a specific version of a project. Requires the `view_public_info` permission in the project or owning organization.",
        "operationId": "showVersion",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the version to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/versions/{name}/{platform}/download": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Downloads a version",
        "description": "Downloads the file for a specific platform of a version. Requires visibility of the project and version.",
        "operationId": "downloadVersion",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to download the version from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the version to download",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "path",
            "description": "The platform of the version to download",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "303": {
            "description": "Version has an external download url",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Version doesn't have a file attached to it",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/versions/{name}/stats": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Returns the stats for a version",
        "description": "Returns the stats (downloads) for a version per day for a certain date range. Requires the `is_subject_member` permission.",
        "operationId": "showVersionStats",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The version to return the stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The first date to include in the result",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The last date to include in the result",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionStats"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionStats"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionStats"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "is_subject_member"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/stats": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the stats for a project",
        "description": "Returns the stats (downloads and views) for a project per day for a certain date range. Requires the `is_subject_member` permission.",
        "operationId": "showProjectStats",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The first date to include in the result",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The last date to include in the result",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.DayProjectStats"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.DayProjectStats"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.DayProjectStats"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "is_subject_member"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/stargazers": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the stargazers of a project",
        "description": "Returns the stargazers of a project. Requires the `view_public_info` permission.",
        "operationId": "getProjectStargazers",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return stargazers for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/members": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the members of a project",
        "description": "Returns the members of a project. Requires the `view_public_info` permission.",
        "operationId": "getProjectMembers",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return members for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectMember"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectMember"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectMember"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/latestrelease": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Returns the latest release version of a project",
        "description": "Returns the latest version of a project. Requires the `view_public_info` permission in the project or owning organizations.",
        "operationId": "latestReleaseVersion",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{slug}/latest": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Returns the latest version of a project for a specific channel",
        "description": "Returns the latest version of a project. Requires the `view_public_info` permission in the project or owning organization.",
        "operationId": "latestVersion",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The channel to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/v1/projects/{author}/{slug}/versions": {
      "get": {
        "tags": [
          "Versions"
        ],
        "operationId": "getVersions",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the project to return versions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return versions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/projects/{author}/{slug}/versions/{name}": {
      "get": {
        "tags": [
          "Versions"
        ],
        "operationId": "getVersion",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the project to return the version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the version to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.Version"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/projects/{author}/{slug}/versions/{name}/{platform}/download": {
      "get": {
        "tags": [
          "Versions"
        ],
        "operationId": "downloadVersion_1",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the project to download the version from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to download the version from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the version to download",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "path",
            "description": "The platform of the version to download",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/projects/{author}/{slug}/versions/{name}/stats": {
      "get": {
        "tags": [
          "Versions"
        ],
        "operationId": "getVersionStats",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the version to return the stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The version to return the stats for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The first date to include in the result",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The last date to include in the result",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionStats"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/projects/{author}/{slug}/latestrelease": {
      "get": {
        "tags": [
          "Versions"
        ],
        "operationId": "getLatestReleaseVersion",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the project to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/projects/{author}/{slug}/latest": {
      "get": {
        "tags": [
          "Versions"
        ],
        "operationId": "getLatestVersion",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "The author of the project to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "The channel to return the latest version for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Returns your permissions",
        "description": "Returns a list of permissions you have in the given context",
        "operationId": "showPermissions",
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "The slug of the project get the permissions for. Must not be used together with `organizationName`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "description": "The organization to check permissions in. Must not be used together with `projectOwner` and `projectSlug`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.UserPermissions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.UserPermissions"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.UserPermissions"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": []
          }
        ]
      }
    },
    "/api/v1/permissions/hasAny": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Checks whether you have at least one of the provided permissions",
        "description": "Checks whether you have at least one of the provided permissions in the given context",
        "operationId": "hasAny",
        "parameters": [
          {
            "name": "permissions",
            "in": "query",
            "description": "The permissions to check",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.common.NamedPermission"
              }
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "The slug of the project to check permissions in. Must not be used together with `organization`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "description": "The organization to check permissions in. Must not be used together with `slug`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.PermissionCheck"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.PermissionCheck"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.PermissionCheck"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": []
          }
        ]
      }
    },
    "/api/v1/permissions/hasAll": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Checks whether you have all the provided permissions",
        "description": "Checks whether you have all the provided permissions in the given context",
        "operationId": "hasAll",
        "parameters": [
          {
            "name": "permissions",
            "in": "query",
            "description": "The permissions to check",
            "required": true,
            "schema": {
              "maxItems": 50,
              "minItems": 0,
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.common.NamedPermission"
              }
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "The project slug of the project to check permissions in. Must not be used together with `organizationName`",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "description": "The organization to check permissions in. Must not be used together with `projectOwner` and `projectSlug`",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.PermissionCheck"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.PermissionCheck"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.permissions.PermissionCheck"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": []
          }
        ]
      }
    },
    "/api/v1/pages/page/{slug}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Returns a page of a project",
        "description": "Returns a page of a project. Requires visibility of the page.",
        "operationId": "getPage",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the page for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "The path of the page",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pages/main/{slug}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Returns the main page of a project",
        "description": "Returns the main page of a project. Requires visibility of the page.",
        "operationId": "getMainPage",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the project to return the page for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authors": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all users with at least one public project",
        "description": "Returns all users that have at least one public project. Requires the `view_public_info` permission.",
        "operationId": "getAuthors",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "401": {
            "description": "Api session missing, invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions to use this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HangarAuth": [
              "view_public_info"
            ]
          }
        ]
      }
    },
    "/api/internal/versions/version/{versionId}/{platform}/track": {
      "get": {
        "tags": [
          "version-controller"
        ],
        "operationId": "trackDownload",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/versions/version/{slug}/versions/{versionString}": {
      "get": {
        "tags": [
          "version-controller"
        ],
        "operationId": "getVersion_1",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/versions/version/{slug}/versions/{versionString}/{platform}/download": {
      "get": {
        "tags": [
          "version-controller"
        ],
        "operationId": "download",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/reviews/{versionId}/reviews": {
      "get": {
        "tags": [
          "review-controller"
        ],
        "operationId": "getVersionReviews",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarReview"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/projects/validateName": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "operationId": "validateProjectName",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/projects/project/{slug}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "operationId": "getHangarProject",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProject"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/projects/possibleOwners": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "operationId": "possibleProjectCreators",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.PossibleProjectOwner"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/pages/page/{slug}/**": {
      "get": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "getProjectPage",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.ExtendedProjectPage"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/pages/list/{projectId}": {
      "get": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "listProjectPages",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectPage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/pages/checkName": {
      "get": {
        "tags": [
          "project-page-controller"
        ],
        "operationId": "checkName",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/{user}/userOrganizations": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getUserOrganizationRoles",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.db.roles.OrganizationRoleTable"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/organizations/{user}/userOrganizationsVisibility": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getUserOrganizationMembershipVisibility",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/organizations/validate": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "validateName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/organizations/org/{orgName}": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "orgName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.HangarOrganization"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/oauth/{provider}/login": {
      "get": {
        "tags": [
          "o-auth-controller"
        ],
        "operationId": "login",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.oauth.OAuthMode"
            }
          },
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/oauth/{provider}/callback": {
      "get": {
        "tags": [
          "o-auth-controller"
        ],
        "operationId": "callback",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/jarscanning/result/{platform}/{versionId}": {
      "get": {
        "tags": [
          "jar-scanning-controller"
        ],
        "operationId": "getResult",
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.JarScanResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/image/**": {
      "get": {
        "tags": [
          "image-proxy-controller"
        ],
        "operationId": "proxy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/flags/{projectId}": {
      "get": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "getFlags",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectFlag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/flags/{id}/notifications": {
      "get": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "getNotifications_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectFlagNotification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/flags/unresolvedamount": {
      "get": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "getUnresolvedFlagsQueueSize",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/flags/unresolved": {
      "get": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "getUnresolvedFlags",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.projects.HangarProjectFlag"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/flags/resolved": {
      "get": {
        "tags": [
          "flag-controller"
        ],
        "operationId": "getResolvedFlags",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.projects.HangarProjectFlag"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/fakeData": {
      "get": {
        "tags": [
          "fake-data-controller"
        ],
        "operationId": "generateFakeData",
        "parameters": [
          {
            "name": "users",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectsPerUser",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/data/visibilities": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getVisibilities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$VisibilityData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/version-info": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$VersionInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/validations": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getValidations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validations"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/sponsor": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getSponsor",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.config.hangar.HangarConfig$Sponsor"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/security": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getSecurity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Security"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/prompts": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getPrompts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$PromptData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/projectRoles": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getProjectRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.RoleData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/platforms": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getPlatforms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$PlatformData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/permissions": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getPermissions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$PermissionData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/orgRoles": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getOrganizationRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.RoleData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/loggedActions": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getLoggedActions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/licenses": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getLicenses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/globalRoles": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getGlobalRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.RoleData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/flagReasons": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getFlagReasons",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$FlagReasonData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/channelColors": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getColors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$ColorData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/categories": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.BackendDataController$CategoryData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/data/announcements": {
      "get": {
        "tags": [
          "backend-data-controller"
        ],
        "operationId": "getAnnouncements",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.Announcement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/cors/": {
      "get": {
        "tags": [
          "cors-proxy-controller"
        ],
        "operationId": "proxy_1",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/channels/{slug}": {
      "get": {
        "tags": [
          "channel-controller"
        ],
        "operationId": "getChannels",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarChannel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/channels/checkName": {
      "get": {
        "tags": [
          "channel-controller"
        ],
        "operationId": "checkName_1",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "existingName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/channels/checkColor": {
      "get": {
        "tags": [
          "channel-controller"
        ],
        "operationId": "checkColor",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
            }
          },
          {
            "name": "existingColor",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/avatar/{type}/{subject}.webp": {
      "get": {
        "tags": [
          "avatar-controller"
        ],
        "operationId": "getAvatar",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/refresh": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "refreshAccessToken",
        "parameters": [
          {
            "name": "HangarAuth_REFRESH",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/logout": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "loggedOut",
        "parameters": [
          {
            "name": "HangarAuth_REFRESH",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/auth/invalidate": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "invalidateRefreshToken",
        "parameters": [
          {
            "name": "HangarAuth_REFRESH",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/internal/api-keys/possible-perms/{user}": {
      "get": {
        "tags": [
          "api-key-controller"
        ],
        "operationId": "getPossiblePermissions",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.common.NamedPermission"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/api-keys/existing-keys/{user}": {
      "get": {
        "tags": [
          "api-key-controller"
        ],
        "operationId": "getApiKeys",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.api.ApiKey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/api-keys/check-key/{user}": {
      "get": {
        "tags": [
          "api-key-controller"
        ],
        "operationId": "checkKeyName",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/internal/admin/stats": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "getStats",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.fasterxml.jackson.databind.node.ArrayNode"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/log": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "getActionLog",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.requests.RequestPagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.logs.HangarLoggedAction"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/health": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "getHealthReport",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.HealthReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/approval/versionsneedingapproval": {
      "get": {
        "tags": [
          "admin-approval-controller"
        ],
        "operationId": "getVersionApprovalQueueSize",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/approval/versions": {
      "get": {
        "tags": [
          "admin-approval-controller"
        ],
        "operationId": "getReviewQueue",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.admin.AdminApprovalController$ReviewQueue"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/approval/projects": {
      "get": {
        "tags": [
          "admin-approval-controller"
        ],
        "operationId": "getProjectApprovals",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.papermc.hangar.controller.internal.admin.AdminApprovalController$ProjectApprovals"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/approval/projectneedingapproval": {
      "get": {
        "tags": [
          "admin-approval-controller"
        ],
        "operationId": "getProjectApprovalQueueSize",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/activity/{user}/reviews": {
      "get": {
        "tags": [
          "admin-activity-controller"
        ],
        "operationId": "getReviewActivity",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.admin.activity.ReviewActivity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/admin/activity/{user}/flags": {
      "get": {
        "tags": [
          "admin-activity-controller"
        ],
        "operationId": "getFlagActivity",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.papermc.hangar.model.internal.admin.activity.FlagActivity"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "io.papermc.hangar.model.internal.api.requests.StringContent": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "A non-null, non-empty string"
          }
        },
        "description": "The path and new contents of the page"
      },
      "io.papermc.hangar.model.internal.api.requests.UserProfileSettings": {
        "required": [
          "tagline",
          "socials"
        ],
        "type": "object",
        "properties": {
          "tagline": {
            "type": "string"
          },
          "socials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.UserSettings": {
        "required": [
          "theme",
          "language"
        ],
        "type": "object",
        "properties": {
          "theme": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.requests.RequestPagination": {
        "required": [
          "offset",
          "limit"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "maximum": 25,
            "minimum": 1,
            "type": "integer",
            "description": "The maximum amount of items to return",
            "format": "int64",
            "example": 1
          },
          "offset": {
            "minimum": 0,
            "type": "integer",
            "description": "Where to start searching",
            "format": "int64",
            "example": 0
          }
        }
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.user.notifications.HangarNotification": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarNotification"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.Pagination": {
        "required": [
          "offset",
          "limit",
          "count"
        ],
        "type": "object",
        "properties": {
          "limit": {
            "maximum": 25,
            "minimum": 1,
            "type": "integer",
            "description": "The maximum amount of items to return",
            "format": "int64",
            "example": 1
          },
          "offset": {
            "minimum": 0,
            "type": "integer",
            "description": "Where to start searching",
            "format": "int64",
            "example": 0
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.notifications.HangarNotification": {
        "required": [
          "createdAt",
          "read",
          "action",
          "id",
          "message",
          "originUserName",
          "type"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "read": {
            "type": "boolean"
          },
          "originUserName": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.NotificationType"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.notifications.NotificationType": {
        "type": "string",
        "enum": [
          "neutral",
          "success",
          "info",
          "warning",
          "error"
        ]
      },
      "io.papermc.hangar.model.common.Prompt": {
        "type": "string",
        "enum": [
          "CHANGE_AVATAR"
        ]
      },
      "io.papermc.hangar.controller.internal.HangarUserController$Invites": {
        "required": [
          "organization",
          "project"
        ],
        "type": "object",
        "properties": {
          "project": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarInvite$HangarProjectInvite"
            }
          },
          "organization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarInvite$HangarOrganizationInvite"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.user.notifications.HangarInvite$HangarOrganizationInvite": {
        "required": [
          "role",
          "roleId",
          "name",
          "type",
          "url"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarInvite$InviteType"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.notifications.HangarInvite$HangarProjectInvite": {
        "required": [
          "role",
          "roleId",
          "name",
          "type",
          "url"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "representingOrg": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.HangarInvite$InviteType"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.notifications.HangarInvite$InviteType": {
        "type": "string",
        "enum": [
          "project",
          "organization"
        ]
      },
      "io.papermc.hangar.controller.internal.HangarUserController$InviteStatus": {
        "type": "string",
        "enum": [
          "ACCEPT",
          "DECLINE"
        ]
      },
      "io.papermc.hangar.model.api.project.version.PluginDependency": {
        "required": [
          "name",
          "required",
          "platform"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the plugin dependency. For non-external dependencies, this should be the Hangar project name",
            "example": "Maintenance"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the dependency is required for the plugin to function"
          },
          "externalUrl": {
            "type": "string",
            "description": "External url to download the dependency from if not a Hangar project, else null",
            "example": "https://papermc.io/downloads"
          },
          "platform": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
          }
        },
        "description": "Map of each platform's plugin dependencies"
      },
      "io.papermc.hangar.model.common.Platform": {
        "type": "string",
        "description": "Server platform",
        "example": "PAPER",
        "enum": [
          "PAPER",
          "WATERFALL",
          "VELOCITY"
        ]
      },
      "io.papermc.hangar.model.internal.versions.MultipartFileOrUrl": {
        "required": [
          "platforms"
        ],
        "type": "object",
        "properties": {
          "platforms": {
            "type": "array",
            "description": "List of platforms this jar runs on",
            "example": "[PAPER, WATERFALL, VELOCITY]",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          },
          "externalUrl": {
            "type": "string",
            "description": "External url to download the jar from if not provided via an attached jar, else null",
            "example": "https://papermc.io/downloads"
          }
        },
        "description": "List of different jars/external links that are part of the version"
      },
      "io.papermc.hangar.model.internal.versions.VersionUpload": {
        "required": [
          "platformDependencies",
          "channel",
          "pluginDependencies",
          "description",
          "files",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Version string of the version to be published",
            "example": "1.0.0-SNAPSHOT+1"
          },
          "pluginDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "description": "Map of each platform's plugin dependencies",
              "items": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PluginDependency"
              }
            },
            "description": "Map of each platform's plugin dependencies"
          },
          "platformDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "description": "Map of platforms and their versions this version runs on",
              "example": "{PAPER: [\"1.12\", \"1.16-1.18.2\", \"1.20.x\"]}",
              "items": {
                "type": "string",
                "description": "Map of platforms and their versions this version runs on",
                "example": "{PAPER: [\"1.12\", \"1.16-1.18.2\", \"1.20.x\"]}"
              }
            },
            "description": "Map of platforms and their versions this version runs on",
            "example": "{PAPER: [\"1.12\", \"1.16-1.18.2\", \"1.20.x\"]}"
          },
          "description": {
            "type": "string"
          },
          "files": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.MultipartFileOrUrl"
            }
          },
          "channel": {
            "type": "string",
            "description": "Channel of the version to be published under",
            "example": "Release"
          }
        },
        "description": "Version data. See the VersionUpload schema for more info"
      },
      "io.papermc.hangar.model.api.project.version.UploadedVersion": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of the uploaded version",
            "example": "https://hangar.papermc.io/PaperMC/Debuggery/versions/1.0.0"
          }
        },
        "description": "A version that has been uploaded"
      },
      "io.papermc.hangar.model.common.NamedPermission": {
        "type": "string",
        "enum": [
          "view_public_info",
          "edit_own_user_settings",
          "edit_api_keys",
          "edit_subject_settings",
          "manage_subject_members",
          "is_subject_owner",
          "is_subject_member",
          "create_project",
          "edit_page",
          "delete_project",
          "create_version",
          "edit_version",
          "delete_version",
          "edit_channels",
          "create_organization",
          "delete_organization",
          "post_as_organization",
          "mod_notes_and_flags",
          "see_hidden",
          "is_staff",
          "reviewer",
          "view_health",
          "view_ip",
          "view_stats",
          "view_logs",
          "manual_value_changes",
          "restore_version",
          "restore_project",
          "hard_delete_project",
          "hard_delete_version",
          "edit_all_user_settings"
        ]
      },
      "io.papermc.hangar.model.internal.api.requests.CreateAPIKeyForm": {
        "required": [
          "permissions",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maximum": 36,
            "minimum": 5,
            "maxLength": 36,
            "minLength": 5,
            "type": "string"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.NamedPermission"
            }
          }
        },
        "description": "Data about the key to create"
      },
      "io.papermc.hangar.model.api.auth.ApiSession": {
        "required": [
          "expiresIn",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT used for authentication"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Milliseconds this JWT expires in",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.versions.UpdatePluginDependencies": {
        "required": [
          "pluginDependencies",
          "platform"
        ],
        "type": "object",
        "properties": {
          "platform": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
          },
          "pluginDependencies": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PluginDependency"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.versions.UpdatePlatformVersions": {
        "required": [
          "versions",
          "platform"
        ],
        "type": "object",
        "properties": {
          "platform": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
          },
          "versions": {
            "maxItems": 2147483647,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "io.papermc.hangar.model.common.projects.ReviewState": {
        "type": "string",
        "enum": [
          "unreviewed",
          "reviewed",
          "under_review",
          "partially_reviewed"
        ]
      },
      "io.papermc.hangar.model.common.projects.Visibility": {
        "type": "string",
        "description": "The visibility of a project or version",
        "example": "PUBLIC",
        "enum": [
          "public",
          "new",
          "needsChanges",
          "needsApproval",
          "softDelete"
        ]
      },
      "io.papermc.hangar.model.db.versions.ProjectVersionTable": {
        "required": [
          "reviewerId",
          "visibility",
          "versionString",
          "description",
          "approvedAt",
          "authorId",
          "createdAt",
          "versionId",
          "name",
          "id",
          "reviewState",
          "projectId",
          "channelId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "versionString": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "channelId": {
            "type": "integer",
            "format": "int64"
          },
          "reviewerId": {
            "type": "integer",
            "format": "int64"
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time"
          },
          "authorId": {
            "type": "integer",
            "format": "int64"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "reviewState": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.ReviewState"
          },
          "name": {
            "type": "string"
          },
          "versionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.api.project.settings.Link": {
        "required": [
          "name",
          "id",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.project.settings.LinkSection": {
        "required": [
          "links",
          "id",
          "type",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "Type of the link. Either SIDEBAR or TOP",
            "example": "TOP"
          },
          "title": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.Link"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.settings.Tag": {
        "type": "string",
        "enum": [
          "ADDON",
          "LIBRARY",
          "SUPPORTS_FOLIA"
        ]
      },
      "io.papermc.hangar.model.common.projects.Category": {
        "type": "string",
        "enum": [
          "admin_tools",
          "chat",
          "dev_tools",
          "economy",
          "gameplay",
          "games",
          "protection",
          "role_playing",
          "world_management",
          "misc",
          "undefined"
        ]
      },
      "io.papermc.hangar.model.db.projects.ProjectTable": {
        "required": [
          "licenseUrl",
          "visibility",
          "keywords",
          "description",
          "licenseName",
          "ownerId",
          "url",
          "tags",
          "createdAt",
          "licenseType",
          "ownerName",
          "sponsors",
          "donationSubject",
          "name",
          "links",
          "id",
          "category",
          "donationEnabled",
          "projectId",
          "slug"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Category"
          },
          "description": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.Tag"
            }
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.LinkSection"
            }
          },
          "licenseType": {
            "type": "string"
          },
          "licenseName": {
            "type": "string"
          },
          "licenseUrl": {
            "type": "string"
          },
          "donationEnabled": {
            "type": "boolean"
          },
          "donationSubject": {
            "type": "string"
          },
          "sponsors": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.api.project.version.FileInfo": {
        "required": [
          "sha256Hash",
          "name",
          "sizeBytes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64"
          },
          "sha256Hash": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.common.ChannelFlag": {
        "type": "string",
        "enum": [
          "FROZEN",
          "UNSTABLE",
          "PINNED",
          "SENDS_NOTIFICATIONS"
        ]
      },
      "io.papermc.hangar.model.common.Color": {
        "type": "string",
        "enum": [
          "#B400FF",
          "#C87DFF",
          "#E100E1",
          "#0000FF",
          "#B9F2FF",
          "#E7FEFF",
          "#0096FF",
          "#00E1E1",
          "#00DC00",
          "#009600",
          "#7FFF00",
          "#FFC800",
          "#CFB53B",
          "#FF8200",
          "#DC0000",
          "#C0C0C0",
          "#A9A9A9",
          "transparent"
        ]
      },
      "io.papermc.hangar.model.internal.versions.PendingVersion": {
        "required": [
          "channelDescription",
          "channelFlags",
          "platformDependencies",
          "versionString",
          "pluginDependencies",
          "description",
          "files",
          "channelName"
        ],
        "type": "object",
        "properties": {
          "versionString": {
            "type": "string"
          },
          "pluginDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PluginDependency"
              }
            }
          },
          "platformDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "files": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.PendingVersionFile"
            }
          },
          "channelName": {
            "type": "string"
          },
          "channelDescription": {
            "type": "string"
          },
          "channelColor": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "channelFlags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.ChannelFlag"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.versions.PendingVersionFile": {
        "required": [
          "platforms"
        ],
        "type": "object",
        "properties": {
          "platforms": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          },
          "fileInfo": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.FileInfo"
          },
          "externalUrl": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.versions.ReviewMessage": {
        "required": [
          "args",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "args": {
            "type": "object"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.projects.VisibilityChangeForm": {
        "required": [
          "visibility",
          "comment"
        ],
        "type": "object",
        "properties": {
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "comment": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectDonationSettings": {
        "required": [
          "enable",
          "subject"
        ],
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean"
          },
          "subject": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectLicense": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.project.settings.ProjectSettings": {
        "required": [
          "license",
          "keywords",
          "sponsors",
          "donation",
          "links",
          "tags"
        ],
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.LinkSection"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.Tag"
            }
          },
          "license": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectLicense"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sponsors": {
            "type": "string"
          },
          "donation": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectDonationSettings"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.projects.ProjectSettingsForm": {
        "required": [
          "settings",
          "description",
          "category"
        ],
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.ProjectSettings"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Category"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.common.roles.ProjectRole": {
        "type": "string",
        "enum": [
          "PROJECT_SUPPORT",
          "PROJECT_EDITOR",
          "PROJECT_DEVELOPER",
          "PROJECT_MAINTAINER",
          "PROJECT_ADMIN",
          "PROJECT_OWNER"
        ]
      },
      "io.papermc.hangar.model.internal.api.requests.EditMembersForm$ProjectMember": {
        "required": [
          "role",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.ProjectRole"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.projects.NewProjectForm": {
        "required": [
          "settings",
          "name",
          "description",
          "pageContent",
          "category",
          "ownerId"
        ],
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.ProjectSettings"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Category"
          },
          "description": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "pageContent": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.projects.NewProjectPage": {
        "required": [
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.common.roles.OrganizationRole": {
        "type": "string",
        "enum": [
          "ORGANIZATION_SUPPORT",
          "ORGANIZATION_EDITOR",
          "ORGANIZATION_DEVELOPER",
          "ORGANIZATION_MAINTAINER",
          "ORGANIZATION_ADMIN",
          "ORGANIZATION_OWNER"
        ]
      },
      "io.papermc.hangar.model.internal.api.requests.EditMembersForm$OrgMember": {
        "required": [
          "role",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.OrganizationRole"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.CreateOrganizationForm": {
        "required": [
          "members",
          "name"
        ],
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.requests.EditMembersForm$OrgMember"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.OAuthSignupForm": {
        "required": [
          "jwt",
          "tos",
          "email",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "tos": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.OAuthSignupResponse": {
        "required": [
          "emailVerificationNeeded"
        ],
        "type": "object",
        "properties": {
          "emailVerificationNeeded": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.admin.ReportNotificationForm": {
        "required": [
          "toReporter",
          "warning",
          "content"
        ],
        "type": "object",
        "properties": {
          "warning": {
            "type": "boolean"
          },
          "toReporter": {
            "type": "boolean"
          },
          "content": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.requests.FlagForm": {
        "required": [
          "reason",
          "comment",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.FlagReason"
          }
        }
      },
      "io.papermc.hangar.model.common.projects.FlagReason": {
        "type": "string",
        "enum": [
          "project.flag.flags.inappropriateContent",
          "project.flag.flags.impersonation",
          "project.flag.flags.spam",
          "project.flag.flags.malIntent",
          "project.flag.flags.other"
        ]
      },
      "io.papermc.hangar.model.internal.api.requests.projects.EditChannelForm": {
        "required": [
          "color",
          "name",
          "flags",
          "description",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "flags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.ChannelFlag"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.projects.ChannelForm": {
        "required": [
          "color",
          "name",
          "flags",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "flags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.ChannelFlag"
            }
          }
        }
      },
      "io.papermc.hangar.components.auth.controller.CredentialController$RenameRequest": {
        "required": [
          "displayName",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.TotpSetupResponse": {
        "required": [
          "qrCode",
          "secret"
        ],
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "qrCode": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.TotpForm": {
        "required": [
          "code",
          "secret"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.SignupForm": {
        "required": [
          "password",
          "tos",
          "email",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tos": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.credential.OAuthCredential$OAuthConnection": {
        "required": [
          "provider",
          "name",
          "id"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.SettingsResponse": {
        "required": [
          "oauthConnections",
          "emailConfirmed",
          "authenticators",
          "emailPending",
          "hasTotp",
          "hasPassword",
          "hasBackupCodes"
        ],
        "type": "object",
        "properties": {
          "authenticators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.dto.SettingsResponse$Authenticator"
            }
          },
          "oauthConnections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.credential.OAuthCredential$OAuthConnection"
            }
          },
          "hasBackupCodes": {
            "type": "boolean"
          },
          "hasTotp": {
            "type": "boolean"
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "emailPending": {
            "type": "boolean"
          },
          "hasPassword": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.SettingsResponse$Authenticator": {
        "required": [
          "addedAt",
          "displayName",
          "id"
        ],
        "type": "object",
        "properties": {
          "addedAt": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.ResetForm": {
        "required": [
          "password",
          "code",
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.login.LoginWebAuthNForm": {
        "required": [
          "password",
          "publicKeyCredentialJson",
          "usernameOrEmail"
        ],
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "publicKeyCredentialJson": {
            "type": "string"
          }
        }
      },
      "com.fasterxml.jackson.databind.JsonNode": {
        "type": "object"
      },
      "io.papermc.hangar.components.auth.model.credential.CredentialType": {
        "type": "string",
        "enum": [
          "PASSWORD",
          "BACKUP_CODES",
          "TOTP",
          "WEBAUTHN",
          "OAUTH"
        ]
      },
      "io.papermc.hangar.components.auth.model.dto.login.LoginResponse": {
        "required": [
          "types",
          "aal",
          "user"
        ],
        "type": "object",
        "properties": {
          "aal": {
            "type": "integer",
            "format": "int32"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.components.auth.model.credential.CredentialType"
            }
          },
          "user": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.HangarUser"
          }
        }
      },
      "io.papermc.hangar.model.api.UserNameChange": {
        "required": [
          "date",
          "newName",
          "oldName"
        ],
        "type": "object",
        "properties": {
          "oldName": {
            "type": "string"
          },
          "newName": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.HangarUser": {
        "required": [
          "headerData",
          "projectCount",
          "nameHistory",
          "avatarUrl",
          "readPrompts",
          "roles",
          "language",
          "accessToken",
          "uuid",
          "aal",
          "createdAt",
          "name",
          "tagline",
          "theme",
          "id",
          "locked",
          "socials",
          "email",
          "isOrganization"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "tagline": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "projectCount": {
            "type": "integer",
            "format": "int64"
          },
          "locked": {
            "type": "boolean"
          },
          "nameHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.UserNameChange"
            }
          },
          "avatarUrl": {
            "type": "string"
          },
          "socials": {
            "$ref": "#/components/schemas/com.fasterxml.jackson.databind.JsonNode"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "headerData": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.HangarUser$HeaderData"
          },
          "readPrompts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "language": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "aal": {
            "type": "integer",
            "format": "int32"
          },
          "isOrganization": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.HangarUser$HeaderData": {
        "required": [
          "unreadNotifications",
          "reviewQueueCount",
          "globalPermission",
          "unansweredInvites",
          "unresolvedFlags",
          "projectApprovals",
          "organizationCount"
        ],
        "type": "object",
        "properties": {
          "globalPermission": {
            "type": "string"
          },
          "unreadNotifications": {
            "type": "integer",
            "format": "int64"
          },
          "unansweredInvites": {
            "type": "integer",
            "format": "int64"
          },
          "unresolvedFlags": {
            "type": "integer",
            "format": "int64"
          },
          "projectApprovals": {
            "type": "integer",
            "format": "int64"
          },
          "reviewQueueCount": {
            "type": "integer",
            "format": "int64"
          },
          "organizationCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.login.LoginTotpForm": {
        "required": [
          "password",
          "totpCode",
          "usernameOrEmail"
        ],
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "totpCode": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.login.LoginPasswordForm": {
        "required": [
          "password",
          "usernameOrEmail"
        ],
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.login.LoginBackupForm": {
        "required": [
          "password",
          "backupCode",
          "usernameOrEmail"
        ],
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "backupCode": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.credential.BackupCodeCredential$BackupCode": {
        "required": [
          "used_at",
          "code"
        ],
        "type": "object",
        "properties": {
          "used_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.dto.AccountForm": {
        "required": [
          "newPassword",
          "email",
          "username",
          "currentPassword"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.db.UserTable": {
        "required": [
          "createdAt",
          "emailVerified",
          "readPrompts",
          "organization",
          "name",
          "language",
          "theme",
          "id",
          "locked",
          "socials",
          "uuid",
          "userId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "tagline": {
            "type": "string"
          },
          "readPrompts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "locked": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "socials": {
            "$ref": "#/components/schemas/com.fasterxml.jackson.databind.JsonNode"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "organization": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.admin.ChangeRoleForm": {
        "required": [
          "color",
          "roleId",
          "title"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.requests.admin.ChangePlatformVersionsForm": {
        "required": [
          "empty"
        ],
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.project.PageEditForm": {
        "required": [
          "path",
          "content"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "description": "The path and new contents of the page"
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.User": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.User"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.User": {
        "required": [
          "createdAt",
          "projectCount",
          "nameHistory",
          "avatarUrl",
          "roles",
          "name",
          "tagline",
          "locked",
          "socials",
          "isOrganization"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "tagline": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "projectCount": {
            "type": "integer",
            "format": "int64"
          },
          "locked": {
            "type": "boolean"
          },
          "nameHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.UserNameChange"
            }
          },
          "avatarUrl": {
            "type": "string"
          },
          "socials": {
            "$ref": "#/components/schemas/com.fasterxml.jackson.databind.JsonNode"
          },
          "isOrganization": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectSortingStrategy": {
        "type": "string",
        "enum": [
          "stars",
          "downloads",
          "views",
          "newest",
          "updated",
          "recent_views",
          "recent_downloads"
        ]
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectCompact": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectCompact"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectCompact": {
        "required": [
          "createdAt",
          "lastUpdated",
          "visibility",
          "stats",
          "avatarUrl",
          "name",
          "namespace",
          "category"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "The unique name of the project"
          },
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "stats": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectStats"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Category"
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last time the project was updated",
            "format": "date-time"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "avatarUrl": {
            "type": "string",
            "description": "The url to the project's icon"
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectNamespace": {
        "required": [
          "owner",
          "slug"
        ],
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "slug": {
            "type": "string",
            "description": "The unique name of a project",
            "example": "Maintenance"
          }
        },
        "description": "The namespace of the project"
      },
      "io.papermc.hangar.model.api.project.ProjectStats": {
        "required": [
          "recentDownloads",
          "downloads",
          "recentViews",
          "watchers",
          "stars",
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "integer",
            "format": "int64"
          },
          "downloads": {
            "type": "integer",
            "format": "int64"
          },
          "recentViews": {
            "type": "integer",
            "format": "int64"
          },
          "recentDownloads": {
            "type": "integer",
            "format": "int64"
          },
          "stars": {
            "type": "integer",
            "format": "int64"
          },
          "watchers": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Stats of the project"
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.Project": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.Project"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.Project": {
        "required": [
          "userActions",
          "createdAt",
          "lastUpdated",
          "settings",
          "visibility",
          "stats",
          "avatarUrl",
          "name",
          "namespace",
          "description",
          "category"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "The unique name of the project"
          },
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "stats": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectStats"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Category"
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last time the project was updated",
            "format": "date-time"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "avatarUrl": {
            "type": "string",
            "description": "The url to the project's icon"
          },
          "description": {
            "type": "string",
            "description": "The short description of the project"
          },
          "userActions": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.UserActions"
          },
          "settings": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.ProjectSettings"
          }
        }
      },
      "io.papermc.hangar.model.api.project.UserActions": {
        "required": [
          "starred",
          "flagged",
          "watching"
        ],
        "type": "object",
        "properties": {
          "starred": {
            "type": "boolean"
          },
          "watching": {
            "type": "boolean"
          },
          "flagged": {
            "type": "boolean"
          }
        },
        "description": "Information about your interactions with the project"
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.version.Version": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.Version"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectChannel": {
        "required": [
          "createdAt",
          "color",
          "name",
          "flags",
          "description"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "flags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.ChannelFlag"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.version.PlatformVersionDownload": {
        "required": [],
        "type": "object",
        "properties": {
          "fileInfo": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.FileInfo"
          },
          "externalUrl": {
            "type": "string",
            "description": "External download url if not directly uploaded to Hangar"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Hangar download url if not an external download"
          }
        }
      },
      "io.papermc.hangar.model.api.project.version.Version": {
        "required": [
          "visibility",
          "author",
          "channel",
          "description",
          "createdAt",
          "platformDependencies",
          "stats",
          "downloads",
          "name",
          "pluginDependencies",
          "reviewState",
          "platformDependenciesFormatted",
          "pinnedStatus"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "description": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionStats"
          },
          "author": {
            "type": "string"
          },
          "reviewState": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.ReviewState"
          },
          "channel": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectChannel"
          },
          "pinnedStatus": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionCompact$PinnedStatus"
          },
          "downloads": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PlatformVersionDownload"
            }
          },
          "pluginDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PluginDependency"
              }
            }
          },
          "platformDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "platformDependenciesFormatted": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.version.VersionCompact$PinnedStatus": {
        "type": "string",
        "enum": [
          "NONE",
          "VERSION",
          "CHANNEL"
        ]
      },
      "io.papermc.hangar.model.api.project.version.VersionStats": {
        "required": [
          "totalDownloads",
          "platformDownloads"
        ],
        "type": "object",
        "properties": {
          "totalDownloads": {
            "type": "integer",
            "format": "int64"
          },
          "platformDownloads": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.DayProjectStats": {
        "required": [
          "downloads",
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "integer",
            "format": "int64"
          },
          "downloads": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.api.project.ProjectMember": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectMember"
            }
          }
        }
      },
      "io.papermc.hangar.model.api.project.ProjectMember": {
        "required": [
          "roles",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.CompactRole"
            }
          }
        }
      },
      "io.papermc.hangar.model.common.roles.CompactRole": {
        "required": [
          "color",
          "title",
          "category"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "color": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.api.permissions.UserPermissions": {
        "required": [
          "permissions",
          "permissionBinString",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.PermissionType"
          },
          "permissionBinString": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.NamedPermission"
            }
          }
        }
      },
      "io.papermc.hangar.model.common.PermissionType": {
        "type": "string",
        "enum": [
          "global",
          "project",
          "organization"
        ]
      },
      "io.papermc.hangar.model.api.permissions.PermissionCheck": {
        "required": [
          "result",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.PermissionType"
          },
          "result": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.api.ApiKey": {
        "required": [
          "createdAt",
          "permissions",
          "name",
          "tokenIdentifier"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "tokenIdentifier": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.NamedPermission"
            }
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "io.papermc.hangar.model.internal.versions.HangarVersion": {
        "required": [
          "visibility",
          "author",
          "channel",
          "approvedBy",
          "description",
          "createdAt",
          "platformDependencies",
          "stats",
          "downloads",
          "name",
          "pluginDependencies",
          "id",
          "reviewState",
          "platformDependenciesFormatted",
          "pinnedStatus"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "description": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionStats"
          },
          "author": {
            "type": "string"
          },
          "reviewState": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.ReviewState"
          },
          "channel": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectChannel"
          },
          "pinnedStatus": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.VersionCompact$PinnedStatus"
          },
          "downloads": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PlatformVersionDownload"
            }
          },
          "pluginDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PluginDependency"
              }
            }
          },
          "platformDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "platformDependenciesFormatted": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "approvedBy": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.common.ReviewAction": {
        "type": "string",
        "enum": [
          "START",
          "MESSAGE",
          "STOP",
          "REOPEN",
          "APPROVE",
          "PARTIALLY_APPROVE",
          "UNDO_APPROVAL"
        ]
      },
      "io.papermc.hangar.model.internal.versions.HangarReview": {
        "required": [
          "createdAt",
          "endedAt",
          "messages",
          "userName",
          "userId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userName": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarReview$HangarReviewMessage"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.versions.HangarReview$HangarReviewMessage": {
        "required": [
          "args",
          "createdAt",
          "action",
          "message"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "args": {
            "type": "object"
          },
          "action": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.ReviewAction"
          }
        }
      },
      "io.papermc.hangar.model.db.projects.ProjectOwner": {
        "required": [
          "organization",
          "name",
          "id",
          "userId"
        ],
        "type": "object",
        "properties": {
          "organization": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.db.roles.ProjectRoleTable": {
        "required": [
          "createdAt",
          "role",
          "roleId",
          "accepted",
          "principalId",
          "id",
          "userId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.ProjectRole"
          },
          "accepted": {
            "type": "boolean"
          },
          "principalId": {
            "type": "integer",
            "format": "int64"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.ExtendedProjectPage": {
        "required": [
          "createdAt",
          "contents",
          "name",
          "deletable",
          "isHome",
          "id",
          "slug"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "deletable": {
            "type": "boolean"
          },
          "isHome": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProject": {
        "required": [
          "owner",
          "settings",
          "lastVisibilityChangeUserName",
          "lastVisibilityChangeComment",
          "visibility",
          "avatarUrl",
          "description",
          "roleCategory",
          "pinnedVersions",
          "userActions",
          "createdAt",
          "lastUpdated",
          "pages",
          "stats",
          "mainPage",
          "mainChannelVersions",
          "members",
          "name",
          "namespace",
          "id",
          "category",
          "projectId",
          "info"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "description": "The internal id of the project",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The unique name of the project"
          },
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "stats": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectStats"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Category"
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last time the project was updated",
            "format": "date-time"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "avatarUrl": {
            "type": "string",
            "description": "The url to the project's icon"
          },
          "description": {
            "type": "string",
            "description": "The short description of the project"
          },
          "userActions": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.UserActions"
          },
          "settings": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.settings.ProjectSettings"
          },
          "owner": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.db.projects.ProjectOwner"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.JoinableMemberIo.papermc.hangar.model.db.roles.ProjectRoleTable"
            }
          },
          "lastVisibilityChangeComment": {
            "type": "string"
          },
          "lastVisibilityChangeUserName": {
            "type": "string"
          },
          "info": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProject$HangarProjectInfo"
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectPage"
            }
          },
          "mainPage": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.ExtendedProjectPage"
          },
          "pinnedVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProject$PinnedVersion"
            }
          },
          "mainChannelVersions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarVersion"
            }
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "roleCategory": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProject$HangarProjectInfo": {
        "required": [
          "publicVersions",
          "starCount",
          "flagCount",
          "watcherCount",
          "noteCount"
        ],
        "type": "object",
        "properties": {
          "publicVersions": {
            "type": "integer",
            "format": "int32"
          },
          "flagCount": {
            "type": "integer",
            "format": "int32"
          },
          "noteCount": {
            "type": "integer",
            "format": "int32"
          },
          "starCount": {
            "type": "integer",
            "format": "int64"
          },
          "watcherCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProject$PinnedVersion": {
        "required": [
          "versionId",
          "downloads",
          "name",
          "channel",
          "type",
          "platformDependenciesFormatted"
        ],
        "type": "object",
        "properties": {
          "versionId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProject$PinnedVersion$Type"
          },
          "name": {
            "type": "string"
          },
          "channel": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectChannel"
          },
          "platformDependenciesFormatted": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "downloads": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.version.PlatformVersionDownload"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProject$PinnedVersion$Type": {
        "type": "string",
        "enum": [
          "CHANNEL",
          "VERSION"
        ]
      },
      "io.papermc.hangar.model.internal.projects.HangarProjectPage": {
        "required": [
          "children",
          "name",
          "id",
          "slug",
          "home"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "home": {
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectPage"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.user.JoinableMemberIo.papermc.hangar.model.db.roles.ProjectRoleTable": {
        "required": [
          "role",
          "user",
          "hidden",
          "avatarUrl"
        ],
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.db.roles.ProjectRoleTable"
          },
          "user": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
          },
          "hidden": {
            "type": "boolean"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.responses.PossibleProjectOwner": {
        "required": [
          "organization",
          "name",
          "id",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProjectNote": {
        "required": [
          "createdAt",
          "id",
          "message",
          "userName",
          "projectId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.db.roles.OrganizationRoleTable": {
        "required": [
          "createdAt",
          "role",
          "ownerName",
          "avatarUrl",
          "roleId",
          "accepted",
          "principalId",
          "id",
          "ownerId",
          "userId",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.roles.OrganizationRole"
          },
          "accepted": {
            "type": "boolean"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "ownerName": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "principalId": {
            "type": "integer",
            "format": "int64"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "io.papermc.hangar.model.internal.HangarOrganization": {
        "required": [
          "owner",
          "members",
          "roleCategory",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "owner": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.db.projects.ProjectOwner"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.JoinableMemberIo.papermc.hangar.model.db.roles.OrganizationRoleTable"
            }
          },
          "roleCategory": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.user.JoinableMemberIo.papermc.hangar.model.db.roles.OrganizationRoleTable": {
        "required": [
          "role",
          "user",
          "hidden",
          "avatarUrl"
        ],
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.db.roles.OrganizationRoleTable"
          },
          "user": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.db.UserTable"
          },
          "hidden": {
            "type": "boolean"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.components.auth.model.oauth.OAuthMode": {
        "type": "string",
        "enum": [
          "LOGIN",
          "SIGNUP",
          "SETTINGS"
        ]
      },
      "io.papermc.hangar.model.internal.versions.JarScanResult": {
        "required": [
          "createdAt",
          "entries",
          "id",
          "platform",
          "highestSeverity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "platform": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "highestSeverity": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody": {
        "type": "object"
      },
      "io.papermc.hangar.model.internal.projects.HangarProjectFlag": {
        "required": [
          "reason",
          "resolvedAt",
          "resolvedBy",
          "projectVisibility",
          "userId",
          "createdAt",
          "reportedByName",
          "projectNamespace",
          "comment",
          "id",
          "resolvedByName",
          "projectId",
          "resolved"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.FlagReason"
          },
          "resolved": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedBy": {
            "type": "integer",
            "format": "int64"
          },
          "reportedByName": {
            "type": "string"
          },
          "resolvedByName": {
            "type": "string"
          },
          "projectNamespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "projectVisibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProjectFlagNotification": {
        "required": [
          "id",
          "message",
          "originUserName",
          "type",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "originUserName": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.user.notifications.NotificationType"
          }
        }
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.projects.HangarProjectFlag": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectFlag"
            }
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$VisibilityData": {
        "required": [
          "canChangeTo",
          "cssClass",
          "name",
          "title",
          "showModal"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "showModal": {
            "type": "boolean"
          },
          "canChangeTo": {
            "type": "boolean"
          },
          "cssClass": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$VersionInfo": {
        "required": [
          "behind",
          "committer",
          "commit",
          "commitShort",
          "time",
          "tag",
          "message",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "committer": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          },
          "commitShort": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "behind": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.responses.Validation": {
        "required": [],
        "type": "object",
        "properties": {
          "regex": {
            "type": "string"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "min": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.responses.Validations": {
        "required": [
          "org",
          "urlRegex",
          "project",
          "userTagline",
          "version",
          "maxOrgCount"
        ],
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validations$ProjectValidations"
          },
          "userTagline": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "version": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "org": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "maxOrgCount": {
            "type": "integer",
            "format": "int32"
          },
          "urlRegex": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.responses.Validations$ProjectValidations": {
        "required": [
          "maxPageCount",
          "license",
          "keywordName",
          "sponsorsContent",
          "keywords",
          "channels",
          "name",
          "maxChannelCount",
          "pageContent",
          "maxFileSize",
          "pageName",
          "desc"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "desc": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "license": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "keywords": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "keywordName": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "channels": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "pageName": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "pageContent": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "sponsorsContent": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.api.responses.Validation"
          },
          "maxPageCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxChannelCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxFileSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "io.papermc.hangar.config.hangar.HangarConfig$Sponsor": {
        "required": [
          "image",
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.responses.Security": {
        "required": [
          "safeDownloadHosts",
          "oauthProviders"
        ],
        "type": "object",
        "properties": {
          "safeDownloadHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "oauthProviders": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$PromptData": {
        "required": [
          "messageKey",
          "name",
          "titleKey"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "titleKey": {
            "type": "string"
          },
          "messageKey": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.common.roles.RoleData": {
        "required": [
          "color",
          "roleId",
          "permissions",
          "roleCategory",
          "title",
          "value",
          "assignable"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "permissions": {
            "type": "string"
          },
          "roleCategory": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "assignable": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$PlatformData": {
        "required": [
          "platformVersions",
          "visible",
          "name",
          "category",
          "enumName",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform$Category"
          },
          "url": {
            "type": "string"
          },
          "enumName": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "platformVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.PlatformVersion"
            }
          }
        }
      },
      "io.papermc.hangar.model.common.Platform$Category": {
        "type": "string",
        "enum": [
          "Server",
          "Proxy"
        ]
      },
      "io.papermc.hangar.model.common.PlatformVersion": {
        "required": [
          "subVersions",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "subVersions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$PermissionData": {
        "required": [
          "frontendName",
          "permission",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "frontendName": {
            "type": "string"
          },
          "permission": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$FlagReasonData": {
        "required": [
          "type",
          "title"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$ColorData": {
        "required": [
          "name",
          "hex"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "hex": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.controller.internal.BackendDataController$CategoryData": {
        "required": [
          "apiName",
          "visible",
          "icon",
          "title"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          },
          "apiName": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.Announcement": {
        "required": [
          "color",
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarChannel": {
        "required": [
          "versionCount",
          "createdAt",
          "color",
          "flags",
          "name",
          "description",
          "id",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "flags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.ChannelFlag"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "versionCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "com.fasterxml.jackson.databind.node.ArrayNode": {
        "type": "object"
      },
      "io.papermc.hangar.model.api.PaginatedResultIo.papermc.hangar.model.internal.logs.HangarLoggedAction": {
        "required": [
          "pagination",
          "result"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.Pagination"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.HangarLoggedAction"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.logs.HangarLoggedAction": {
        "required": [
          "createdAt",
          "oldState",
          "subject",
          "contextType",
          "action",
          "project",
          "page",
          "userName",
          "userId",
          "version",
          "newState"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.LogActionJava.lang.Object"
          },
          "contextType": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.contexts.Context"
          },
          "newState": {
            "type": "string"
          },
          "oldState": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.viewmodels.LogProject"
          },
          "version": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.viewmodels.LogVersion"
          },
          "page": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.viewmodels.LogPage"
          },
          "subject": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.logs.viewmodels.LogSubject"
          },
          "address": {
            "type": "object",
            "properties": {
              "hostAddress": {
                "type": "string"
              },
              "address": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "hostName": {
                "type": "string"
              },
              "linkLocalAddress": {
                "type": "boolean"
              },
              "multicastAddress": {
                "type": "boolean"
              },
              "anyLocalAddress": {
                "type": "boolean"
              },
              "loopbackAddress": {
                "type": "boolean"
              },
              "siteLocalAddress": {
                "type": "boolean"
              },
              "mcglobal": {
                "type": "boolean"
              },
              "mcnodeLocal": {
                "type": "boolean"
              },
              "mclinkLocal": {
                "type": "boolean"
              },
              "mcsiteLocal": {
                "type": "boolean"
              },
              "mcorgLocal": {
                "type": "boolean"
              },
              "canonicalHostName": {
                "type": "string"
              }
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.logs.LogActionJava.lang.Object": {
        "required": [
          "pgLoggedAction",
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "pgLoggedAction": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.logs.contexts.Context": {
        "type": "string",
        "enum": [
          "PROJECT",
          "VERSION",
          "PAGE",
          "USER",
          "ORGANIZATION"
        ]
      },
      "io.papermc.hangar.model.internal.logs.viewmodels.LogPage": {
        "required": [
          "name",
          "id",
          "slug"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.logs.viewmodels.LogProject": {
        "required": [
          "owner",
          "id",
          "slug"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "slug": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.logs.viewmodels.LogSubject": {
        "required": [
          "name",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.logs.viewmodels.LogVersion": {
        "required": [
          "versionString",
          "id",
          "platforms"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "versionString": {
            "type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          }
        }
      },
      "io.papermc.hangar.db.customtypes.JobState": {
        "required": [
          "null"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "null": {
            "type": "boolean"
          }
        }
      },
      "io.papermc.hangar.model.db.JobTable": {
        "required": [
          "createdAt",
          "lastUpdated",
          "retryAt",
          "lastError",
          "jobProperties",
          "lastErrorDescriptor",
          "id",
          "state",
          "jobType"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "retryAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastError": {
            "type": "string"
          },
          "lastErrorDescriptor": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/io.papermc.hangar.db.customtypes.JobState"
          },
          "jobType": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.internal.job.JobType"
          },
          "jobProperties": {
            "$ref": "#/components/schemas/com.fasterxml.jackson.databind.JsonNode"
          }
        }
      },
      "io.papermc.hangar.model.internal.admin.health.MissingFileCheck": {
        "required": [
          "versionString",
          "namespace",
          "fileNames",
          "platforms"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "versionString": {
            "type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          },
          "fileNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.admin.health.UnhealthyProject": {
        "required": [
          "lastUpdated",
          "visibility",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          }
        }
      },
      "io.papermc.hangar.model.internal.api.responses.HealthReport": {
        "required": [
          "staleProjects",
          "erroredJobs",
          "missingFiles"
        ],
        "type": "object",
        "properties": {
          "staleProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.admin.health.UnhealthyProject"
            }
          },
          "missingFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.admin.health.MissingFileCheck"
            }
          },
          "erroredJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.db.JobTable"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.job.JobType": {
        "type": "string",
        "enum": [
          "SEND_EMAIL"
        ]
      },
      "io.papermc.hangar.controller.internal.admin.AdminApprovalController$ReviewQueue": {
        "required": [
          "underReview",
          "notStarted"
        ],
        "type": "object",
        "properties": {
          "underReview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarReviewQueueEntry"
            }
          },
          "notStarted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarReviewQueueEntry"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.versions.HangarReviewQueueEntry": {
        "required": [
          "versionId",
          "reviews",
          "versionString",
          "versionAuthor",
          "namespace",
          "channelName",
          "versionCreatedAt",
          "channelColor",
          "platforms"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "versionId": {
            "type": "integer",
            "format": "int64"
          },
          "versionString": {
            "type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          },
          "versionCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "versionAuthor": {
            "type": "string"
          },
          "channelName": {
            "type": "string"
          },
          "channelColor": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.Color"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.versions.HangarReviewQueueEntry$Review"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.versions.HangarReviewQueueEntry$Review": {
        "required": [
          "reviewStarted",
          "reviewerName",
          "lastAction"
        ],
        "type": "object",
        "properties": {
          "reviewerName": {
            "type": "string"
          },
          "reviewStarted": {
            "type": "string",
            "format": "date-time"
          },
          "reviewEnded": {
            "type": "string",
            "format": "date-time"
          },
          "lastAction": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.ReviewAction"
          }
        }
      },
      "io.papermc.hangar.controller.internal.admin.AdminApprovalController$ProjectApprovals": {
        "required": [
          "needsApproval",
          "waitingProjects"
        ],
        "type": "object",
        "properties": {
          "needsApproval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectApproval"
            }
          },
          "waitingProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.internal.projects.HangarProjectApproval"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.projects.HangarProjectApproval": {
        "required": [
          "visibility",
          "changeRequester",
          "namespace",
          "comment",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "visibility": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.common.projects.Visibility"
          },
          "comment": {
            "type": "string"
          },
          "changeRequester": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.model.internal.admin.activity.ReviewActivity": {
        "required": [
          "versionString",
          "endedAt",
          "namespace",
          "platforms"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time"
          },
          "versionString": {
            "type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.model.common.Platform"
            }
          }
        }
      },
      "io.papermc.hangar.model.internal.admin.activity.FlagActivity": {
        "required": [
          "resolvedAt",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/components/schemas/io.papermc.hangar.model.api.project.ProjectNamespace"
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "io.papermc.hangar.exceptions.HangarApiException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "classLoaderName": {
                  "type": "string"
                },
                "moduleName": {
                  "type": "string"
                },
                "moduleVersion": {
                  "type": "string"
                },
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "className": {
                  "type": "string"
                },
                "nativeMethod": {
                  "type": "boolean"
                }
              }
            }
          },
          "headers": {
            "type": "object",
            "properties": {
              "range": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpRange"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "location": {
                "type": "string",
                "format": "uri"
              },
              "host": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "hostAddress": {
                        "type": "string"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "hostName": {
                        "type": "string"
                      },
                      "linkLocalAddress": {
                        "type": "boolean"
                      },
                      "multicastAddress": {
                        "type": "boolean"
                      },
                      "anyLocalAddress": {
                        "type": "boolean"
                      },
                      "loopbackAddress": {
                        "type": "boolean"
                      },
                      "siteLocalAddress": {
                        "type": "boolean"
                      },
                      "mcglobal": {
                        "type": "boolean"
                      },
                      "mcnodeLocal": {
                        "type": "boolean"
                      },
                      "mclinkLocal": {
                        "type": "boolean"
                      },
                      "mcsiteLocal": {
                        "type": "boolean"
                      },
                      "mcorgLocal": {
                        "type": "boolean"
                      },
                      "canonicalHostName": {
                        "type": "string"
                      }
                    }
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "unresolved": {
                    "type": "boolean"
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "hostString": {
                    "type": "string"
                  }
                }
              },
              "all": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "writeOnly": true
              },
              "lastModified": {
                "type": "integer",
                "format": "int64"
              },
              "date": {
                "type": "integer",
                "format": "int64"
              },
              "contentLength": {
                "type": "integer",
                "format": "int64"
              },
              "origin": {
                "type": "string"
              },
              "acceptCharset": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "contentDisposition": {
                "$ref": "#/components/schemas/org.springframework.http.ContentDisposition"
              },
              "allow": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "contentLanguage": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "string"
                  },
                  "script": {
                    "type": "string"
                  },
                  "unicodeLocaleAttributes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unicodeLocaleKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "displayScript": {
                    "type": "string"
                  },
                  "displayCountry": {
                    "type": "string"
                  },
                  "displayVariant": {
                    "type": "string"
                  },
                  "extensionKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "iso3Language": {
                    "type": "string"
                  },
                  "iso3Country": {
                    "type": "string"
                  }
                }
              },
              "cacheControl": {
                "type": "string"
              },
              "ifMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "upgrade": {
                "type": "string"
              },
              "etag": {
                "type": "string"
              },
              "pragma": {
                "type": "string"
              },
              "vary": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "expires": {
                "type": "integer",
                "format": "int64"
              },
              "accept": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "acceptLanguage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "basicAuth": {
                "type": "string",
                "writeOnly": true
              },
              "ifUnmodifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "accessControlMaxAge": {
                "type": "integer",
                "format": "int64"
              },
              "acceptLanguageAsLocales": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "string"
                    },
                    "script": {
                      "type": "string"
                    },
                    "unicodeLocaleAttributes": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "displayScript": {
                      "type": "string"
                    },
                    "displayCountry": {
                      "type": "string"
                    },
                    "displayVariant": {
                      "type": "string"
                    },
                    "extensionKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "iso3Language": {
                      "type": "string"
                    },
                    "iso3Country": {
                      "type": "string"
                    }
                  }
                }
              },
              "ifNoneMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "acceptPatch": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "bearerAuth": {
                "type": "string",
                "writeOnly": true
              },
              "connection": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowCredentials": {
                "type": "boolean"
              },
              "accessControlAllowMethods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "accessControlAllowOrigin": {
                "type": "string"
              },
              "accessControlRequestHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlRequestMethod": {
                "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
              },
              "accessControlExposeHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ifModifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "contentType": {
                "$ref": "#/components/schemas/org.springframework.http.MediaType"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "body": {
            "$ref": "#/components/schemas/org.springframework.http.ProblemDetail"
          },
          "reason": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "message": {
            "type": "string"
          },
          "responseHeaders": {
            "type": "object",
            "properties": {
              "range": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpRange"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "location": {
                "type": "string",
                "format": "uri"
              },
              "host": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "hostAddress": {
                        "type": "string"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "hostName": {
                        "type": "string"
                      },
                      "linkLocalAddress": {
                        "type": "boolean"
                      },
                      "multicastAddress": {
                        "type": "boolean"
                      },
                      "anyLocalAddress": {
                        "type": "boolean"
                      },
                      "loopbackAddress": {
                        "type": "boolean"
                      },
                      "siteLocalAddress": {
                        "type": "boolean"
                      },
                      "mcglobal": {
                        "type": "boolean"
                      },
                      "mcnodeLocal": {
                        "type": "boolean"
                      },
                      "mclinkLocal": {
                        "type": "boolean"
                      },
                      "mcsiteLocal": {
                        "type": "boolean"
                      },
                      "mcorgLocal": {
                        "type": "boolean"
                      },
                      "canonicalHostName": {
                        "type": "string"
                      }
                    }
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "unresolved": {
                    "type": "boolean"
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "hostString": {
                    "type": "string"
                  }
                }
              },
              "all": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "writeOnly": true
              },
              "lastModified": {
                "type": "integer",
                "format": "int64"
              },
              "date": {
                "type": "integer",
                "format": "int64"
              },
              "contentLength": {
                "type": "integer",
                "format": "int64"
              },
              "origin": {
                "type": "string"
              },
              "acceptCharset": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "contentDisposition": {
                "$ref": "#/components/schemas/org.springframework.http.ContentDisposition"
              },
              "allow": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "contentLanguage": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "string"
                  },
                  "script": {
                    "type": "string"
                  },
                  "unicodeLocaleAttributes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unicodeLocaleKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "displayScript": {
                    "type": "string"
                  },
                  "displayCountry": {
                    "type": "string"
                  },
                  "displayVariant": {
                    "type": "string"
                  },
                  "extensionKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "iso3Language": {
                    "type": "string"
                  },
                  "iso3Country": {
                    "type": "string"
                  }
                }
              },
              "cacheControl": {
                "type": "string"
              },
              "ifMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "upgrade": {
                "type": "string"
              },
              "etag": {
                "type": "string"
              },
              "pragma": {
                "type": "string"
              },
              "vary": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "expires": {
                "type": "integer",
                "format": "int64"
              },
              "accept": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "acceptLanguage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "basicAuth": {
                "type": "string",
                "writeOnly": true
              },
              "ifUnmodifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "accessControlMaxAge": {
                "type": "integer",
                "format": "int64"
              },
              "acceptLanguageAsLocales": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "string"
                    },
                    "script": {
                      "type": "string"
                    },
                    "unicodeLocaleAttributes": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "displayScript": {
                      "type": "string"
                    },
                    "displayCountry": {
                      "type": "string"
                    },
                    "displayVariant": {
                      "type": "string"
                    },
                    "extensionKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "iso3Language": {
                      "type": "string"
                    },
                    "iso3Country": {
                      "type": "string"
                    }
                  }
                }
              },
              "ifNoneMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "acceptPatch": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "bearerAuth": {
                "type": "string",
                "writeOnly": true
              },
              "connection": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowCredentials": {
                "type": "boolean"
              },
              "accessControlAllowMethods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "accessControlAllowOrigin": {
                "type": "string"
              },
              "accessControlRequestHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlRequestMethod": {
                "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
              },
              "accessControlExposeHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ifModifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "contentType": {
                "$ref": "#/components/schemas/org.springframework.http.MediaType"
              }
            },
            "additionalProperties": {
              "type": "array",
              "deprecated": true,
              "items": {
                "type": "string",
                "deprecated": true
              }
            },
            "deprecated": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/org.springframework.http.HttpStatusCode"
          },
          "instance": {
            "type": "string",
            "format": "uri",
            "writeOnly": true
          },
          "detail": {
            "type": "string",
            "writeOnly": true
          },
          "title": {
            "type": "string",
            "writeOnly": true
          },
          "detailMessageArguments": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "detailMessageCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "format": "uri",
            "writeOnly": true
          },
          "titleMessageCode": {
            "type": "string"
          },
          "typeMessageCode": {
            "type": "string"
          },
          "rootCause": {
            "type": "object",
            "properties": {
              "cause": {
                "type": "object",
                "properties": {
                  "stackTrace": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "classLoaderName": {
                          "type": "string"
                        },
                        "moduleName": {
                          "type": "string"
                        },
                        "moduleVersion": {
                          "type": "string"
                        },
                        "methodName": {
                          "type": "string"
                        },
                        "fileName": {
                          "type": "string"
                        },
                        "lineNumber": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "className": {
                          "type": "string"
                        },
                        "nativeMethod": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "message": {
                    "type": "string"
                  },
                  "localizedMessage": {
                    "type": "string"
                  }
                }
              },
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "mostSpecificCause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classLoaderName": {
                        "type": "string"
                      },
                      "moduleName": {
                        "type": "string"
                      },
                      "moduleVersion": {
                        "type": "string"
                      },
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "className": {
                        "type": "string"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "org.springframework.http.ContentDisposition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "charset": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "deprecated": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "inline": {
            "type": "boolean"
          },
          "formData": {
            "type": "boolean"
          },
          "attachment": {
            "type": "boolean"
          }
        }
      },
      "org.springframework.http.HttpHeaders": {
        "type": "object",
        "properties": {
          "range": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/org.springframework.http.HttpRange"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "format": "uri"
          },
          "host": {
            "type": "object",
            "properties": {
              "address": {
                "type": "object",
                "properties": {
                  "hostAddress": {
                    "type": "string"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "byte"
                    }
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "linkLocalAddress": {
                    "type": "boolean"
                  },
                  "multicastAddress": {
                    "type": "boolean"
                  },
                  "anyLocalAddress": {
                    "type": "boolean"
                  },
                  "loopbackAddress": {
                    "type": "boolean"
                  },
                  "siteLocalAddress": {
                    "type": "boolean"
                  },
                  "mcglobal": {
                    "type": "boolean"
                  },
                  "mcnodeLocal": {
                    "type": "boolean"
                  },
                  "mclinkLocal": {
                    "type": "boolean"
                  },
                  "mcsiteLocal": {
                    "type": "boolean"
                  },
                  "mcorgLocal": {
                    "type": "boolean"
                  },
                  "canonicalHostName": {
                    "type": "string"
                  }
                }
              },
              "port": {
                "type": "integer",
                "format": "int32"
              },
              "unresolved": {
                "type": "boolean"
              },
              "hostName": {
                "type": "string"
              },
              "hostString": {
                "type": "string"
              }
            }
          },
          "all": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "lastModified": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "contentLength": {
            "type": "integer",
            "format": "int64"
          },
          "origin": {
            "type": "string"
          },
          "acceptCharset": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/org.springframework.http.ContentDisposition"
          },
          "allow": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
            }
          },
          "contentLanguage": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          },
          "cacheControl": {
            "type": "string"
          },
          "ifMatch": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "upgrade": {
            "type": "string"
          },
          "etag": {
            "type": "string"
          },
          "pragma": {
            "type": "string"
          },
          "vary": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expires": {
            "type": "integer",
            "format": "int64"
          },
          "accept": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/org.springframework.http.MediaType"
            }
          },
          "acceptLanguage": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "range": {
                  "type": "string"
                },
                "weight": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "basicAuth": {
            "type": "string",
            "writeOnly": true
          },
          "ifUnmodifiedSince": {
            "type": "integer",
            "format": "int64"
          },
          "accessControlMaxAge": {
            "type": "integer",
            "format": "int64"
          },
          "acceptLanguageAsLocales": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "variant": {
                  "type": "string"
                },
                "script": {
                  "type": "string"
                },
                "unicodeLocaleAttributes": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "unicodeLocaleKeys": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "displayLanguage": {
                  "type": "string"
                },
                "displayScript": {
                  "type": "string"
                },
                "displayCountry": {
                  "type": "string"
                },
                "displayVariant": {
                  "type": "string"
                },
                "extensionKeys": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "iso3Language": {
                  "type": "string"
                },
                "iso3Country": {
                  "type": "string"
                }
              }
            }
          },
          "ifNoneMatch": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "acceptPatch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/org.springframework.http.MediaType"
            }
          },
          "bearerAuth": {
            "type": "string",
            "writeOnly": true
          },
          "connection": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessControlAllowCredentials": {
            "type": "boolean"
          },
          "accessControlAllowMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
            }
          },
          "accessControlAllowOrigin": {
            "type": "string"
          },
          "accessControlRequestHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessControlRequestMethod": {
            "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
          },
          "accessControlExposeHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessControlAllowHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ifModifiedSince": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "$ref": "#/components/schemas/org.springframework.http.MediaType"
          }
        },
        "additionalProperties": {
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string",
            "deprecated": true
          }
        },
        "deprecated": true
      },
      "org.springframework.http.HttpMethod": {
        "type": "object"
      },
      "org.springframework.http.HttpRange": {
        "type": "object"
      },
      "org.springframework.http.HttpStatusCode": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "is4xxClientError": {
            "type": "boolean"
          },
          "is5xxServerError": {
            "type": "boolean"
          },
          "is3xxRedirection": {
            "type": "boolean"
          },
          "is2xxSuccessful": {
            "type": "boolean"
          },
          "is1xxInformational": {
            "type": "boolean"
          }
        }
      },
      "org.springframework.http.MediaType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "qualityValue": {
            "type": "number",
            "format": "double"
          },
          "charset": {
            "type": "string"
          },
          "concrete": {
            "type": "boolean"
          },
          "wildcardType": {
            "type": "boolean"
          },
          "wildcardSubtype": {
            "type": "boolean"
          },
          "subtypeSuffix": {
            "type": "string"
          }
        }
      },
      "org.springframework.http.ProblemDetail": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string",
            "format": "uri"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "io.papermc.hangar.exceptions.MultiHangarApiException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "classLoaderName": {
                  "type": "string"
                },
                "moduleName": {
                  "type": "string"
                },
                "moduleVersion": {
                  "type": "string"
                },
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "className": {
                  "type": "string"
                },
                "nativeMethod": {
                  "type": "boolean"
                }
              }
            }
          },
          "headers": {
            "type": "object",
            "properties": {
              "range": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpRange"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "location": {
                "type": "string",
                "format": "uri"
              },
              "host": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "hostAddress": {
                        "type": "string"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "hostName": {
                        "type": "string"
                      },
                      "linkLocalAddress": {
                        "type": "boolean"
                      },
                      "multicastAddress": {
                        "type": "boolean"
                      },
                      "anyLocalAddress": {
                        "type": "boolean"
                      },
                      "loopbackAddress": {
                        "type": "boolean"
                      },
                      "siteLocalAddress": {
                        "type": "boolean"
                      },
                      "mcglobal": {
                        "type": "boolean"
                      },
                      "mcnodeLocal": {
                        "type": "boolean"
                      },
                      "mclinkLocal": {
                        "type": "boolean"
                      },
                      "mcsiteLocal": {
                        "type": "boolean"
                      },
                      "mcorgLocal": {
                        "type": "boolean"
                      },
                      "canonicalHostName": {
                        "type": "string"
                      }
                    }
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "unresolved": {
                    "type": "boolean"
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "hostString": {
                    "type": "string"
                  }
                }
              },
              "all": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "writeOnly": true
              },
              "lastModified": {
                "type": "integer",
                "format": "int64"
              },
              "date": {
                "type": "integer",
                "format": "int64"
              },
              "contentLength": {
                "type": "integer",
                "format": "int64"
              },
              "origin": {
                "type": "string"
              },
              "acceptCharset": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "contentDisposition": {
                "$ref": "#/components/schemas/org.springframework.http.ContentDisposition"
              },
              "allow": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "contentLanguage": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "string"
                  },
                  "script": {
                    "type": "string"
                  },
                  "unicodeLocaleAttributes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unicodeLocaleKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "displayScript": {
                    "type": "string"
                  },
                  "displayCountry": {
                    "type": "string"
                  },
                  "displayVariant": {
                    "type": "string"
                  },
                  "extensionKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "iso3Language": {
                    "type": "string"
                  },
                  "iso3Country": {
                    "type": "string"
                  }
                }
              },
              "cacheControl": {
                "type": "string"
              },
              "ifMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "upgrade": {
                "type": "string"
              },
              "etag": {
                "type": "string"
              },
              "pragma": {
                "type": "string"
              },
              "vary": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "expires": {
                "type": "integer",
                "format": "int64"
              },
              "accept": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "acceptLanguage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "basicAuth": {
                "type": "string",
                "writeOnly": true
              },
              "ifUnmodifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "accessControlMaxAge": {
                "type": "integer",
                "format": "int64"
              },
              "acceptLanguageAsLocales": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "string"
                    },
                    "script": {
                      "type": "string"
                    },
                    "unicodeLocaleAttributes": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "displayScript": {
                      "type": "string"
                    },
                    "displayCountry": {
                      "type": "string"
                    },
                    "displayVariant": {
                      "type": "string"
                    },
                    "extensionKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "iso3Language": {
                      "type": "string"
                    },
                    "iso3Country": {
                      "type": "string"
                    }
                  }
                }
              },
              "ifNoneMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "acceptPatch": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "bearerAuth": {
                "type": "string",
                "writeOnly": true
              },
              "connection": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowCredentials": {
                "type": "boolean"
              },
              "accessControlAllowMethods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "accessControlAllowOrigin": {
                "type": "string"
              },
              "accessControlRequestHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlRequestMethod": {
                "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
              },
              "accessControlExposeHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ifModifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "contentType": {
                "$ref": "#/components/schemas/org.springframework.http.MediaType"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "body": {
            "$ref": "#/components/schemas/org.springframework.http.ProblemDetail"
          },
          "reason": {
            "type": "string"
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.exceptions.HangarApiException"
            }
          },
          "message": {
            "type": "string"
          },
          "responseHeaders": {
            "type": "object",
            "properties": {
              "range": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpRange"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "location": {
                "type": "string",
                "format": "uri"
              },
              "host": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "hostAddress": {
                        "type": "string"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "byte"
                        }
                      },
                      "hostName": {
                        "type": "string"
                      },
                      "linkLocalAddress": {
                        "type": "boolean"
                      },
                      "multicastAddress": {
                        "type": "boolean"
                      },
                      "anyLocalAddress": {
                        "type": "boolean"
                      },
                      "loopbackAddress": {
                        "type": "boolean"
                      },
                      "siteLocalAddress": {
                        "type": "boolean"
                      },
                      "mcglobal": {
                        "type": "boolean"
                      },
                      "mcnodeLocal": {
                        "type": "boolean"
                      },
                      "mclinkLocal": {
                        "type": "boolean"
                      },
                      "mcsiteLocal": {
                        "type": "boolean"
                      },
                      "mcorgLocal": {
                        "type": "boolean"
                      },
                      "canonicalHostName": {
                        "type": "string"
                      }
                    }
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "unresolved": {
                    "type": "boolean"
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "hostString": {
                    "type": "string"
                  }
                }
              },
              "all": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "writeOnly": true
              },
              "lastModified": {
                "type": "integer",
                "format": "int64"
              },
              "date": {
                "type": "integer",
                "format": "int64"
              },
              "contentLength": {
                "type": "integer",
                "format": "int64"
              },
              "origin": {
                "type": "string"
              },
              "acceptCharset": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "contentDisposition": {
                "$ref": "#/components/schemas/org.springframework.http.ContentDisposition"
              },
              "allow": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "contentLanguage": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "string"
                  },
                  "script": {
                    "type": "string"
                  },
                  "unicodeLocaleAttributes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unicodeLocaleKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "displayScript": {
                    "type": "string"
                  },
                  "displayCountry": {
                    "type": "string"
                  },
                  "displayVariant": {
                    "type": "string"
                  },
                  "extensionKeys": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "iso3Language": {
                    "type": "string"
                  },
                  "iso3Country": {
                    "type": "string"
                  }
                }
              },
              "cacheControl": {
                "type": "string"
              },
              "ifMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "upgrade": {
                "type": "string"
              },
              "etag": {
                "type": "string"
              },
              "pragma": {
                "type": "string"
              },
              "vary": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "expires": {
                "type": "integer",
                "format": "int64"
              },
              "accept": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "acceptLanguage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "basicAuth": {
                "type": "string",
                "writeOnly": true
              },
              "ifUnmodifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "accessControlMaxAge": {
                "type": "integer",
                "format": "int64"
              },
              "acceptLanguageAsLocales": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "string"
                    },
                    "script": {
                      "type": "string"
                    },
                    "unicodeLocaleAttributes": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "displayScript": {
                      "type": "string"
                    },
                    "displayCountry": {
                      "type": "string"
                    },
                    "displayVariant": {
                      "type": "string"
                    },
                    "extensionKeys": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "iso3Language": {
                      "type": "string"
                    },
                    "iso3Country": {
                      "type": "string"
                    }
                  }
                }
              },
              "ifNoneMatch": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "acceptPatch": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.MediaType"
                }
              },
              "bearerAuth": {
                "type": "string",
                "writeOnly": true
              },
              "connection": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowCredentials": {
                "type": "boolean"
              },
              "accessControlAllowMethods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
                }
              },
              "accessControlAllowOrigin": {
                "type": "string"
              },
              "accessControlRequestHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlRequestMethod": {
                "$ref": "#/components/schemas/org.springframework.http.HttpMethod"
              },
              "accessControlExposeHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessControlAllowHeaders": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ifModifiedSince": {
                "type": "integer",
                "format": "int64"
              },
              "contentType": {
                "$ref": "#/components/schemas/org.springframework.http.MediaType"
              }
            },
            "additionalProperties": {
              "type": "array",
              "deprecated": true,
              "items": {
                "type": "string",
                "deprecated": true
              }
            },
            "deprecated": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/org.springframework.http.HttpStatusCode"
          },
          "instance": {
            "type": "string",
            "format": "uri",
            "writeOnly": true
          },
          "detail": {
            "type": "string",
            "writeOnly": true
          },
          "title": {
            "type": "string",
            "writeOnly": true
          },
          "detailMessageArguments": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "detailMessageCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "format": "uri",
            "writeOnly": true
          },
          "titleMessageCode": {
            "type": "string"
          },
          "typeMessageCode": {
            "type": "string"
          },
          "rootCause": {
            "type": "object",
            "properties": {
              "cause": {
                "type": "object",
                "properties": {
                  "stackTrace": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "classLoaderName": {
                          "type": "string"
                        },
                        "moduleName": {
                          "type": "string"
                        },
                        "moduleVersion": {
                          "type": "string"
                        },
                        "methodName": {
                          "type": "string"
                        },
                        "fileName": {
                          "type": "string"
                        },
                        "lineNumber": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "className": {
                          "type": "string"
                        },
                        "nativeMethod": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "message": {
                    "type": "string"
                  },
                  "localizedMessage": {
                    "type": "string"
                  }
                }
              },
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "mostSpecificCause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classLoaderName": {
                        "type": "string"
                      },
                      "moduleName": {
                        "type": "string"
                      },
                      "moduleVersion": {
                        "type": "string"
                      },
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "className": {
                        "type": "string"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "object": {
            "type": "string"
          },
          "isHangarValidationException": {
            "type": "boolean"
          },
          "httpError": {
            "$ref": "#/components/schemas/io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException$HttpError"
          },
          "globalErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException$GlobalError"
            }
          },
          "fieldErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException$FieldError"
            }
          }
        }
      },
      "io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException$FieldError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "errorMsg": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "rejectedValue": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException$GlobalError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "errorMsg": {
            "type": "string"
          },
          "objectName": {
            "type": "string"
          }
        }
      },
      "io.papermc.hangar.exceptions.MethodArgumentNotValidExceptionSerializer$HangarValidationException$HttpError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusPhrase": {
            "type": "string"
          }
        }
      }
    }
  }
}
